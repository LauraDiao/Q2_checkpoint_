import json,sys, os, glob, re, time
from os import listdir

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

import warnings

warnings.filterwarnings("ignore")

sys.path.insert(0, 'src')
from helper import *
from eda import *
from train import *
from etl import *
from make_dir import init_


def main(targets):
    init_() # generates directories

    transform_config = json.load(open('config/transform.json'))
    eda_config = json.load(open('config/eda.json'))
    all_config = json.load(open("config/all.json"))

    test_unseen = 'unseen'
    test_seen = 'seen'
    
    cond1 = True
    cond2 = False
    
    if 'clean' in targets:
        '''deletes all temporary files generated by other targets.'''
        temp_dirs = [
            "data/temp/tempdata_c", 
            "data/temp/tempdata_r", 
            'data/out',
            'outputs',
            'outputs/eda'
        ]
        for dr_ in temp_dirs:
            for f in listdir(dr_): # should only remove files, not directories
                fname = os.path.join(dr_, f)
                if not os.path.isdir(fname):
                    os.remove(fname)
        print('tempfiles cleaned')
                    
    if 'data' in targets:
        # generating feat from unseen and seen data
        readfilerun('data/raw/train_r', 'data/temp/tempdata_r')
        gen(test_seen, 'tempdata_r', **transform_config)
        readfilerun('data/raw/train_c', 'data/temp/tempdata_c')
        gen(test_unseen, 'tempdata_c', **transform_config)

    if 'eda' in targets:  
        # readfiledrun and gen for seen data, refer to data target
        print('EDA generated in the train and inference targets')

    if 'train' in targets:
        # trains and tests in this target
        readfilerun('data/raw/train_r', 'data/temp/tempdata_r')
        gen(test_seen, 'tempdata_r', **transform_config)
                
        comb1 = getAllCombinations(1)
        comb2 = getAllCombinations(2)
        
        print("Testing on seen data: ")
        test_mse(test_seen, comb1, comb2)
        best_performance(test_seen)
        
        print('plotting seen data')
        main_eda(test_seen, [200, 300], **eda_config)
        print("EDA saved to outputs/eda/ folder")

    if "inference" in targets: 
        # trains model on unseen data TODO fix the labeling issue
        readfilerun('data/raw/train_c', 'data/temp/tempdata_c')
        gen(test_unseen, 'tempdata_c', **transform_config)
        
        comb1 = getAllCombinations(1)
        comb2 = getAllCombinations(2)
        
        print("Testing on unseen data: ")
        test_mse(test_unseen, comb1, comb2)
        best_performance(test_unseen)
        
        print('plotting un seen data')
        main_eda(test_unseen, [200, 300], **eda_config)
        print("EDA saved to outputs/eda/ folder")
        model_eda()
        
    if "test" in targets: 
        # runs all targets on sample data

        readfilerun('data/raw/train_r', 'data/temp/tempdata_r') # TODO uncomment
        gen(test_seen, 'tempdata_r', **transform_config)
        readfilerun('data/raw/train_c', 'data/temp/tempdata_c')
        gen(test_unseen, 'tempdata_c', **transform_config)
       
        print('plotting seen data')
        main_eda(test_seen, [200, 300], **eda_config)
        print('plotting un seen data')
        main_eda(test_unseen, [200, 300], **eda_config)
        print("EDA saved to outputs/eda/ folder")
        
        comb1 = getAllCombinations(1)
        comb2 = getAllCombinations(2)
        
        print("Testing on seen data: ")
        test_mse(test_seen, comb1, comb2)
        best_performance(test_seen)
        
        print("Testing on unseen data: ")
        test_mse(test_unseen, comb1, comb2)
        best_performance(test_unseen)
        model_eda()
                
    if 'all' in targets: 
        # runs all targets on all data
        readfilerun('data/raw/train_r', 'data/temp/tempdata_r')
        gen(test_seen, 'tempdata_r', **all_config)
        readfilerun('data/raw/train_c', 'data/temp/tempdata_c')
        gen(test_unseen, 'tempdata_c', **all_config)
       
        print('plotting seen data')
        main_eda(test_seen, [200, 300], **eda_config)
        print('plotting un seen data')
        main_eda(test_unseen, [200, 300], **eda_config)
        print("EDA saved to outputs/eda/ folder")
        
        comb1 = getAllCombinations(1)
        comb2 = getAllCombinations(2)
        
        print("Testing on seen data: ")
        test_mse(test_seen, comb1, comb2)
        best_performance(test_seen)
        
        print("Testing on unseen data: ")
        test_mse(test_unseen, comb1, comb2)
        best_performance(test_unseen)
        model_eda()
        

if __name__ == '__main__':

    targets = sys.argv[1:]
    main(targets)
